// Generated by CoffeeScript 1.7.1
var geoError, geoOptions, geoSuccess, getDirections, model, socket, _ref;

this.currentLocation = null;

geoSuccess = function(currentLocation) {
  if (currentLocation) {
    this.currentLocation = currentLocation;
    return socket.emit('find-nearest-query', {
      target_class: 'bike-parking',
      limit: 10,
      location: currentLocation
    });
  }
};

geoError = function() {};

geoOptions = {
  enableHighAccuracy: true,
  maximumAge: 30000,
  timeout: 27000
};

if (typeof navigator !== "undefined" && navigator !== null) {
  if ((_ref = navigator.geolocation) != null) {
    _ref.getCurrentPosition(geoSuccess, geoError, geoOptions);
  }
}

this.Location = Backbone.Model;

socket = io.connect('http://' + document.domain + ':' + window.location.port + '/live');

socket.on('connect', function() {
  return this.emit('find-nearest-query', {
    target_class: 'bike-parking',
    limit: 10,
    location: this.currentLocation
  });
});

socket.on('query-results', function(data) {
  console.dir(data);
  return model.set({
    results: data
  });
});

socket.on('directions', function(data) {
  console.dir(data);
  return model.set({
    directions: data
  });
});

this.model = model = new Backbone.Model({
  hello: 'world'
});

getDirections = function() {
  var results;
  results = model.has('results') ? model.get('results') : [];
  if (results.length > 0) {
    return socket.emit('get-directions', {
      from: [0, 0],
      to: [0, 0]
    });
  }
};

this.socket = socket;
